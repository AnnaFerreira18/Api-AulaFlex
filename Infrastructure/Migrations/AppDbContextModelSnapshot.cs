// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("IdAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("IdAula");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Domain.Entities.Colaborador", b =>
                {
                    b.Property<Guid>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Senha")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdColaborador");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.Property<Guid>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("IdAula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VagasDisponiveis")
                        .HasColumnType("int");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdAula");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("Domain.Entities.Inscricao", b =>
                {
                    b.Property<Guid>("IdInscricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AulaIdAula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColaboradorIdColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HorarioIdHorario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdColaborador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHorario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdInscricao");

                    b.HasIndex("AulaIdAula");

                    b.HasIndex("ColaboradorIdColaborador");

                    b.HasIndex("HorarioIdHorario");

                    b.HasIndex("IdAula");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdHorario");

                    b.ToTable("Inscricao");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.HasOne("Domain.Entities.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("IdAula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Domain.Entities.Inscricao", b =>
                {
                    b.HasOne("Domain.Entities.Aula", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("AulaIdAula");

                    b.HasOne("Domain.Entities.Colaborador", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("ColaboradorIdColaborador");

                    b.HasOne("Domain.Entities.Horario", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("HorarioIdHorario");

                    b.HasOne("Domain.Entities.Aula", "Aula")
                        .WithMany()
                        .HasForeignKey("IdAula")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Colaborador", "Colaborador")
                        .WithMany()
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Colaborador");

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("Domain.Entities.Aula", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("Domain.Entities.Colaborador", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
